{"version":3,"sources":["components/Pixel.js","components/Row.js","components/Panel.js","imgs/logo.png","components/Editor.js","imgs/island.png","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Pixel","props","_useState","useState","_useState2","_slicedToArray","pixelColor","setPixelColor","_useState3","_useState4","intColor","setIntColor","_useState5","_useState6","changeable","setChangeable","_jsx","className","onClick","Tool","setColor","setTool","color","onMouseEnter","onMouseLeave","style","backgroundColor","Row","pixels","i","width","push","children","Panel","panelRef","useRef","rows","height","_jsxs","ref","id","exportComponentAsPNG","Editor","setwidth","setheight","hideColor","sethideColor","_useState7","_useState8","buttonText","setbuttonText","_useState9","_useState10","Color","_useState11","_useState12","src","logo","alt","type","defaultValue","onChange","e","target","value","ChromePicker","newColor","hex","disableAlpha","background","display","Header","useEffect","KUTE","fromTo","path","repeat","duration","yoyo","start","console","log","island","viewBox","version","transform","d","fill","visibility","href","App","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54704db6.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport '../styles/Pixel.css';\r\n\r\nfunction Pixel (props) {\r\n    const [pixelColor, setPixelColor] = useState('');\r\n    const [intColor, setIntColor] = useState(pixelColor);\r\n    const [changeable, setChangeable] = useState(true);\r\n\r\n    function initTool(){\r\n        props.setTool(!props.Tool)\r\n    }\r\n\r\n    function applyColor(){\r\n        if(props.Tool === true){\r\n            props.setColor(intColor)\r\n            initTool()\r\n        }\r\n        else{\r\n            setPixelColor(props.color)\r\n            setChangeable(false)\r\n        }\r\n    }\r\n    function changeColor(){\r\n        setIntColor(pixelColor);\r\n        setPixelColor(props.color)\r\n    }\r\n    function restColor(){\r\n        if(changeable){ setPixelColor(intColor)}\r\n        setChangeable(true)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"pixel\" onClick={applyColor} onMouseEnter={changeColor} onMouseLeave={restColor} style={{backgroundColor : pixelColor}}>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Pixel \r\n","import React from 'react'\r\nimport '../styles/Row.css';\r\nimport Pixel from './Pixel';\r\n\r\nfunction Row(props) {\r\n    let pixels = [];\r\n    for(let i = 0; i < props.width; i++){\r\n        pixels.push(<Pixel key={i} color={props.color} setColor={props.setColor} Tool={props.Tool} setTool={props.setTool} />)\r\n    }\r\n    return (\r\n        <div className=\"panel-row\" >\r\n            {pixels}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import React,{useRef} from 'react'\r\nimport '../styles/Panel.css';\r\nimport Row from './Row';\r\nimport {exportComponentAsPNG} from \"react-component-export-image\"\r\n\r\nfunction Panel(props) {\r\n    const panelRef = useRef()\r\n    function exportcomponent(){\r\n        exportComponentAsPNG(panelRef)\r\n\r\n    }\r\n    let rows = [];\r\n\r\n     for(let i = 0; i < props.height; i++){\r\n        rows.push(<Row key={i} width={props.width} color={props.color} setColor={props.setColor} Tool={props.Tool} setTool={props.setTool} />)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"panel\">\r\n            <div ref={panelRef} id=\"drawingPanel\" > \r\n                {rows}\r\n            </div>\r\n            { <button className='exp-btn' onClick={exportcomponent}>Export</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Panel\r\n","export default __webpack_public_path__ + \"static/media/logo.cfc24741.png\";","import React , {useState} from 'react';\r\nimport '../styles/Editor.css';\r\nimport { ChromePicker } from 'react-color';\r\nimport Panel from './Panel';\r\nimport logo from \"../imgs/logo.png\"\r\n\r\nfunction Editor() {\r\n    const [width, setwidth] = useState(32);\r\n    const [height, setheight] = useState(32);\r\n    const [hideColor, sethideColor] = useState(false);\r\n    const [buttonText, setbuttonText] = useState(\"Start\");\r\n    const [Color, setColor] = useState(\"#0AD2E4\");\r\n    const [Tool, setTool] = useState(false);\r\n\r\n    const colorStyle = {\r\n        background: '#262730',\r\n        display: 'none'\r\n      }\r\n\r\n    function pickingColor(){\r\n        setTool(!Tool)\r\n    }\r\n\r\n    function initializPanel() {\r\n        sethideColor(!hideColor);\r\n\r\n        buttonText === \"Start\" \r\n            ? setbuttonText(\"Reset\")\r\n            : setbuttonText(\"Start\")\r\n    }\r\n    function handleChange(newColor){\r\n        setColor(newColor.hex);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container-md\">                \r\n            <div className=\"title-bar\">\r\n                <a className=\"navbar-brand\">\r\n                    <img src={logo} width=\"30\" height=\"30\" alt=\"\"></img>\r\n                </a>\r\n                <p>Pixel Editor</p>  \r\n            </div> \r\n        <div id=\"editor\"> \r\n            <div className=\"row\">\r\n            <div className=\"options\">\r\n                <p>Grid Size</p>\r\n                <div className=\"option\">\r\n                    <input type=\"number\" className=\"grid-size\" defaultValue={width} onChange={(e) => {setwidth(e.target.value);}}/>\r\n                    <span>Width</span>\r\n                </div>\r\n                <div className=\"option\">\r\n                    <input type=\"number\" className=\"grid-size\" defaultValue={height} onChange={(e) => {setheight(e.target.value);}}/>\r\n                    <span>Height</span>\r\n                </div>\r\n                <div className=\"option\">\r\n                    <button onClick={initializPanel} className=\"color-select-btn\" style={{backgroundColor : Color}}><i className=\"bi bi-brush\"></i></button>\r\n                    <span>Color</span>\r\n                </div>\r\n                <div className=\"option\">\r\n                    <button onClick={pickingColor} className=\"color-pickup-btn\"><i className=\"bi bi-eyedropper\"></i></button>\r\n                    <span>Eyedropper</span>\r\n                </div>\r\n            </div>\r\n            { hideColor &&\r\n            <ChromePicker\r\n                color={Color} \r\n                onChange={handleChange}\r\n                disableAlpha={true}\r\n                style={colorStyle}\r\n                />\r\n            }\r\n            <Panel\r\n                height={height}\r\n                width={width}\r\n                color={Color}\r\n                setColor={setColor}\r\n                Tool={Tool}\r\n                setTool={setTool}\r\n                />\r\n        </div>\r\n        </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Editor\r\n","export default __webpack_public_path__ + \"static/media/island.42203449.png\";","import React, { useEffect } from 'react';\r\nimport '../styles/header.css';\r\nimport island from \"../imgs/island.png\";\r\nimport KUTE from \"kute.js\"\r\n\r\n\r\n\r\nfunction Header() {\r\n    useEffect(()=>{\r\n        const tween =  KUTE.fromTo(\r\n            '#blob1',\r\n            { path: '#blob1' },\r\n            { path : '#blob2' },\r\n            {repeat: 999, duration : 3000 , yoyo: true}\r\n        )\r\n        tween.start()\r\n        console.log(\"hii\")\r\n    }, )\r\n    return (\r\n        <div className=\"cover\">\r\n            <div className=\"row \">\r\n                <div className=\"col-md-7 order-md-2\">\r\n                    <div className=\"art-area\">\r\n                        <img src={island} alt=\"\" />\r\n                        <svg id=\"visual\"\r\n                         viewBox=\"0 0 800 800\"\r\n                          version=\"1.1\">\r\n                            <g transform=\"translate(438.94998843528566 407.2479019946753)\"><path id=\"blob1\" d=\"M260 -272.9C312.1 -207.9 312.3 -103.9 309.9 -2.4C307.6 99.2 302.6 198.5 250.5 259.1C198.5 319.8 99.2 341.9 -9.3 351.2C-117.9 360.5 -235.7 357 -303.9 296.4C-372 235.7 -390.5 117.9 -388.4 2.1C-386.3 -113.6 -363.6 -227.2 -295.4 -292.2C-227.2 -357.2 -113.6 -373.6 -4.8 -368.8C103.9 -363.9 207.9 -337.9 260 -272.9\" fill=\"#00dcff\"></path></g>\r\n                            <g transform=\"translate(479.8986814304336 413.2751703983217)\"style={{visibility: \"hidden\"}} ><path id=\"blob2\" d=\"M156 -283.4C202.1 -243.7 239.2 -201.6 264.7 -154C290.2 -106.3 304.1 -53.2 308.9 2.7C313.6 58.7 309.2 117.3 283.6 164.8C258.1 212.3 211.3 248.6 160.5 282.6C109.7 316.6 54.8 348.3 2.4 344.1C-50 339.9 -100 299.9 -151.1 266C-202.2 232.2 -254.4 204.6 -296 161.3C-337.7 118 -368.9 59 -370.3 -0.8C-371.7 -60.7 -343.5 -121.3 -309.2 -177.5C-275 -233.6 -234.7 -285.3 -182.2 -321.3C-129.7 -357.3 -64.8 -377.6 -4.9 -369.1C55 -360.6 110 -323.2 156 -283.4\" fill=\"#00ddff\"></path></g>\r\n                            </svg>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-5 order-md-1 \">\r\n                    <div className=\"text-area\">\r\n                        <h2>Muraba <br /> Pixel Art Creator</h2>\r\n                        <h4>Fully Free - Mobile Compatible <br /> Web-Based - Open source</h4>\r\n                        <p>Make your Own Pixel art World </p>\r\n                        <a href='#editor' className=\"btn btn-primary start-btn\">Start NOW</a>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import Editor from './components/Editor';\nimport Header from './components/Header';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Editor />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}